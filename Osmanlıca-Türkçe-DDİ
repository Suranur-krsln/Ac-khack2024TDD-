<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Osmanlıca Latinize Klavye ve Kontrol Paneli</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f8ff;
            margin: 20px;
        }
        h1, h2 {
            color: #003366;
        }
        .keyboard {
            display: flex;
            flex-wrap: wrap;
            width: 600px;
            margin-bottom: 20px;
            background-color: #e6f0ff;
            padding: 10px;
            border-radius: 10px;
            border: 1px solid #003366;
        }
        .keyboard button {
            width: 50px;
            height: 50px;
            margin: 2px;
            font-size: 18px;
            cursor: pointer;
            border-radius: 5px;
            border: 1px solid #003366;
            background-color: #ffffff;
            color: #003366;
            transition: background-color 0.2s, color 0.2s;
        }
        .keyboard button:hover {
            background-color: #003366;
            color: #ffffff;
        }
        textarea {
            width: 600px;
            height: 100px;
            margin-bottom: 20px;
            padding: 10px;
            font-size: 16px;
            resize: none;
            border-radius: 5px;
            border: 1px solid #003366;
            background-color: #ffffff;
            color: #003366;
        }
        .control-panel {
            margin-top: 20px;
            padding: 20px;
            background-color: #e6f0ff;
            border: 2px solid #003366;
            border-radius: 5px;
            width: 640px;
        }
        .control-panel button {
            padding: 10px 20px;
            margin-right: 10px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            border: none;
            background-color: #003366;
            color: #ffffff;
            transition: background-color 0.2s;
        }
        .control-panel button:hover {
            background-color: #001a33;
        }
        .comparison-result {
            margin-top: 20px;
            font-size: 18px;
            color: #003366;
        }
        #data-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        #data-table th, #data-table td {
            border: 1px solid #003366;
            padding: 8px;
            text-align: left;
        }
        #data-table th {
            background-color: #003366;
            color: #ffffff;
        }
        #data-table tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        .chart-container {
            margin-top: 20px;
        }
        canvas {
            max-width: 100%;
            height: auto;
        }
        #search-box {
            width: 400px;
            height: 40px;
            margin: 10px 0;
            font-size: 16px;
            padding: 5px;
            border: 1px solid #003366;
            border-radius: 5px;
        }
        .contribution-panel {
            margin-top: 20px;
            padding: 20px;
            background-color: #e6f0ff;
            border: 2px solid #003366;
            border-radius: 5px;
            width: 640px;
        }
        .contribution-panel input[type="text"] {
            width: 100%;
            height: 40px;
            margin-bottom: 10px;
            font-size: 16px;
            padding: 5px;
            border: 1px solid #003366;
            border-radius: 5px;
        }
        .contribution-panel button {
            padding: 10px 20px;
            margin-top: 10px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            border: none;
            background-color: #003366;
            color: #ffffff;
            transition: background-color 0.2s;
        }
        .contribution-panel button:hover {
            background-color: #001a33;
        }
        .contribution-list {
            margin-top: 20px;
            font-size: 16px;
            color: #003366;
        }
        .user-panel {
            margin-top: 20px;
            padding: 20px;
            background-color: #e6f0ff;
            border: 2px solid #003366;
            border-radius: 5px;
            width: 640px;
        }
        .user-panel h2 {
            margin-top: 0;
        }
        .user-panel input[type="text"], .user-panel input[type="password"] {
            width: 100%;
            height: 40px;
            margin-bottom: 10px;
            font-size: 16px;
            padding: 5px;
            border: 1px solid #003366;
            border-radius: 5px;
        }
        .user-panel button {
            padding: 10px 20px;
            margin-top: 10px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            border: none;
            background-color: #003366;
            color: #ffffff;
            transition: background-color 0.2s;
        }
        .user-panel button:hover {
            background-color: #001a33;
        }
        .user-message {
            margin-top: 20px;
            font-size: 16px;
            color: #003366;
        }
    </style>
</head>
<body>

<h1>Osmanlıca Latinize Klavye ve Kontrol Paneli</h1>

<div class="keyboard" id="keyboard">
    <!-- Osmanlıca karakter butonları -->
</div>

<h2>Osmanlıca Metin</h2>
<textarea id="input" placeholder="Osmanlıca metni buraya yazın..."></textarea>

<h2>Latinize Edilmiş Metin</h2>
<textarea id="latinized-output" placeholder="Latinize edilmiş metin burada görünecek..." readonly></textarea>

<h2>Türkçe Çeviri</h2>
<textarea id="turkish-output" placeholder="Türkçe çeviri burada görünecek..." readonly></textarea>

<div class="control-panel">
    <button onclick="latinize()">Latinize Et</button>
    <button onclick="showTurkish()">Türkçe Karşılığını Göster</button>
    <button onclick="compareTexts()">Karşılaştır</button>

    <div class="comparison-result" id="comparison-result"></div>
</div>

<!-- Excel Dosyası Yükleme Bölümü -->
<h2>Excel Dosyası Yükle</h2>
<input type="file" id="excel-file" accept=".xlsx, .xls">
<p id="file-name"></p>
<p id="file-size"></p>
<input type="text" id="search-box" placeholder="Dosya içinde arama yapın..." oninput="searchInData()">
<table id="data-table"></table>

<div class="chart-container">
    <h2>Benzerlik Oranı Grafiği</h2>
    <canvas id="accuracy-chart" width="600" height="400"></canvas>
</div>

<div class="chart-container">
    <h2>Hata Analizi Grafiği</h2>
    <canvas id="error-analysis-chart" width="600" height="400"></canvas>
</div>

<!-- Kullanıcı Katkısı Bölümü -->
<div class="contribution-panel">
    <h2>Kullanıcı Katkısı</h2>
    <input type="text" id="user-contribution-input" placeholder="Manuel metin girin...">
    <button onclick="addUserContribution()">Katkıyı Ekle</button>
    <div class="contribution-list" id="contribution-list"></div>
</div>

<!-- Kullanıcı Paneli -->
<div class="user-panel">
    <h2>Kullanıcı Paneli</h2>
    <input type="text" id="username" placeholder="Kullanıcı Adı">
    <input type="password" id="password" placeholder="Şifre">
    <button onclick="login()">Giriş Yap</button>
    <button onclick="logout()">Çıkış Yap</button>
    <div class="user-message" id="user-message"></div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.2/xlsx.full.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Osmanlıca karakter butonları ve işlevi
    const osmanlicaKeys = [
        'ا', 'ب', 'پ', 'ت', 'ث', 'ج', 'چ', 'ح', 'خ', 'د', 'ذ', 'ر', 'ز', 'ژ', 'س', 'ش', 'ص', 'ض', 'ط', 'ظ', 'ع', 'غ', 'ف', 'ق', 'ك', 'گ', 'ل', 'م', 'ن', 'و', 'ه', 'ء', 'ي', 'ے'
    ];

    const keyboard = document.getElementById('keyboard');
    osmanlicaKeys.forEach(key => {
        const button = document.createElement('button');
        button.textContent = key;
        button.onclick = () => {
            document.getElementById('input').value += key;
        };
        keyboard.appendChild(button);
    });

    // Osmanlıca -> Latin alfabe dönüşümü
    const osmanlicaToLatin = {
        'ا': 'a',
        'ب': 'b',
        'پ': 'p',
        'ت': 't',
        'ث': 'th',
        'ج': 'c',
        'چ': 'ç',
        'ح': 'h',
        'خ': 'kh',
        'د': 'd',
        'ذ': 'dh',
        'ر': 'r',
        'ز': 'z',
        'ژ': 'zh',
        'س': 's',
        'ش': 'sh',
        'ص': 's',
        'ض': 'd',
        'ط': 't',
        'ظ': 'z',
        'ع': '‘',
        'غ': 'gh',
        'ف': 'f',
        'ق': 'q',
        'ك': 'k',
        'گ': 'g',
        'ل': 'l',
        'م': 'm',
        'ن': 'n',
        'و': 'v',
        'ه': 'h',
        'ء': '’',
        'ي': 'y',
        'ے': 'e'
    };

    function latinizeText(text) {
        return text.split('').map(char => osmanlicaToLatin[char] || char).join('');
    }

    function findTurkishEquivalent(text) {
        // Türkçe karşılıkları belirlemek için bu fonksiyonu doldurun
        return "Türkçe karşılık bulunamadı.";
    }

    function latinize() {
        const input = document.getElementById('input').value;
        const latinized = latinizeText(input);
        document.getElementById('latinized-output').value = latinized;
    }

    function showTurkish() {
        const input = document.getElementById('input').value;
        const turkish = findTurkishEquivalent(input);
        document.getElementById('turkish-output').value = turkish;
    }

    function compareTexts() {
        const inputText = document.getElementById('input').value;
        const latinizedText = document.getElementById('latinized-output').value;

        const accuracy = calculateAccuracy(inputText, latinizedText);
        document.getElementById('comparison-result').textContent = Benzerlik Oranı: ${accuracy.toFixed(2)}%;
        drawAccuracyChart(accuracy);
    }

    function calculateAccuracy(original, latinized) {
        const originalLength = original.length;
        const latinizedLength = latinized.length;
        let matchCount = 0;

        for (let i = 0; i < Math.min(originalLength, latinizedLength); i++) {
            if (original[i] === latinized[i]) {
                matchCount++;
            }
        }

        return (matchCount / originalLength) * 100;
    }

    // Excel dosyası yükleme ve tablo oluşturma
    document.getElementById('excel-file').addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (!file) return;

        document.getElementById('file-name').textContent = Dosya Adı: ${file.name};
        document.getElementById('file-size').textContent = Dosya Boyutu: ${(file.size / 1024).toFixed(2)} KB;

        const reader = new FileReader();
        reader.onload = function(e) {
            const data = new Uint8Array(e.target.result);
            const workbook = XLSX.read(data, {type: 'array'});
            const sheetName = workbook.SheetNames[0];
            const sheet = workbook.Sheets[sheetName];
            const json = XLSX.utils.sheet_to_json(sheet, {header: 1});

            const table = document.getElementById('data-table');
            table.innerHTML = "";

            json.forEach((row, index) => {
                const tr = document.createElement('tr');
                row.forEach(cell => {
                    const td = document.createElement(index === 0 ? 'th' : 'td');
                    td.textContent = cell;
                    tr.appendChild(td);
                });
                table.appendChild(tr);
            });
        };
        reader.readAsArrayBuffer(file);
    });

    function searchInData() {
        const query = document.getElementById('search-box').value.toLowerCase();
        const table = document.getElementById('data-table');
        const rows = table.getElementsByTagName('tr');

        for (let i = 1; i < rows.length; i++) {
            const cells = rows[i].getElementsByTagName('td');
            let match = false;
            for (let j = 0; j < cells.length; j++) {
                if (cells[j].textContent.toLowerCase().includes(query)) {
                    match = true;
                    break;
                }
            }
            rows[i].style.display = match ? '' : 'none';
        }
    }

    // Benzerlik Oranı Grafiği
    function drawAccuracyChart(accuracy) {
        const ctx = document.getElementById('accuracy-chart').getContext('2d');
        new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Benzer', 'Farklı'],
                datasets: [{
                    label: 'Benzerlik Oranı',
                    data: [accuracy, 100 - accuracy],
                    backgroundColor: ['#4CAF50', '#F44336']
                }]
            }
        });
    }

    // Hata Analizi Grafiği
    function drawErrorAnalysisChart(errors) {
        const ctx = document.getElementById('error-analysis-chart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: Object.keys(errors),
                datasets: [{
                    label: 'Hata Oranı',
                    data: Object.values(errors),
                    backgroundColor: '#FF9800'
                }]
            }
        });
    }

    // Kullanıcı Katkısı Fonksiyonları
    let userContributions = [];

    function addUserContribution() {
        const input = document.getElementById('user-contribution-input').value.trim();
        if (input) {
            userContributions.push(input);
            document.getElementById('user-contribution-input').value = '';
            updateContributionList();
        }
    }

    function updateContributionList() {
        const list = document.getElementById('contribution-list');
        list.innerHTML = '';
        userContributions.forEach(contribution => {
            const div = document.createElement('div');
            div.textContent = contribution;
            list.appendChild(div);
        });
    }

    // Kullanıcı Giriş ve Çıkış İşlevleri
    let loggedIn = false;

    function login() {
        const username = document.getElementById('username').value.trim();
        const password = document.getElementById('password').value.trim();

        if (username && password) {
            // Bu alanda gerçek bir kullanıcı doğrulama işlemi yapılabilir.
            loggedIn = true;
            document.getElementById('user-message').textContent = Hoş geldiniz, ${username}!;
            document.getElementById('username').value = '';
            document.getElementById('password').value = '';
        } else {
            document.getElementById('user-message').textContent = 'Kullanıcı adı ve şifre gereklidir.';
        }
    }

    function logout() {
        loggedIn = false;
        document.getElementById('user-message').textContent = 'Çıkış yapıldı.';
    }
</script>

</body>
</html>
